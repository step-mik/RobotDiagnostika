// --- Nastavení pinu a baterie ---
const int analogPin = A0;
const float referenceVoltage = 5.0;
const float voltageDividerRatio = 3.256; // 12.6V / 3.825V
const float maxBatteryVoltage = 12.6;
const float minBatteryVoltage = 11.4;

// Nastavení pinů pro senzor
const int trigPin = 9;
const int echoPin = 11;

String command;

int leftPWM = 200;
int rightPWM = 200;
bool leftReversed = false;
bool rightReversed = false;

unsigned long lastStatusMillis = 0;
long duration;
float distanceCm;

void setup() {
  Serial.begin(9600);

  // Motory
  pinMode(5, OUTPUT);
  pinMode(7, OUTPUT);
  pinMode(2, OUTPUT);
  pinMode(6, OUTPUT);
  pinMode(3, OUTPUT);
  pinMode(4, OUTPUT);

  // LED
  pinMode(13, OUTPUT);

  // Senzor
  pinMode(trigPin, OUTPUT);
  pinMode(echoPin, INPUT);

  // Stop all motors
  digitalWrite(7, LOW);
  digitalWrite(2, LOW);
  digitalWrite(3, LOW);
  digitalWrite(4, LOW);
  analogWrite(5, 0);
  analogWrite(6, 0);
}

void loop() {
  // === Příjem příkazů z PC ===
  if (Serial.available()) {
    command = Serial.readStringUntil('\n');
    command.trim();

    // LED ovládání
    if (command == "LED_ON") digitalWrite(13, HIGH);
    else if (command == "LED_OFF") digitalWrite(13, LOW);

    // Levý motor
    else if (command == "LEFT_ON") {
      int limitedPWM = min(leftPWM, 130);
      digitalWrite(7, leftReversed ? LOW : HIGH);
      digitalWrite(2, leftReversed ? HIGH : LOW);
      analogWrite(5, limitedPWM);
    }
    else if (command == "LEFT_OFF") {
      digitalWrite(7, LOW);
      digitalWrite(2, LOW);
      analogWrite(5, 0);
    }
    else if (command.startsWith("LEFT_SPEED:")) {
      leftPWM = command.substring(11).toInt();
      analogWrite(5, leftPWM);
    }
    else if (command == "LEFT_REV") {
      leftReversed = !leftReversed;
    }

    // Pravý motor
    else if (command == "RIGHT_ON") {
      int limitedPWM = min(rightPWM, 180);
      digitalWrite(3, rightReversed ? LOW : HIGH);
      digitalWrite(4, rightReversed ? HIGH : LOW);
      analogWrite(6, limitedPWM);
    }
    else if (command == "RIGHT_OFF") {
      digitalWrite(3, LOW);
      digitalWrite(4, LOW);
      analogWrite(6, 0);
    }
    else if (command.startsWith("RIGHT_SPEED:")) {
      rightPWM = command.substring(12).toInt();
      analogWrite(6, rightPWM);
    }
    else if (command == "RIGHT_REV") {
      rightReversed = !rightReversed;
    }

    // Stop obou motorů
    else if (command == "ALL_STOP") {
      digitalWrite(7, LOW);
      digitalWrite(2, LOW);
      digitalWrite(3, LOW);
      digitalWrite(4, LOW);
      analogWrite(5, 0);
      analogWrite(6, 0);
    }
  }

  // === Logování každých 2 sekund ===
  if (millis() - lastStatusMillis >= 2000) {
    lastStatusMillis = millis();

    // Měření vzdálenosti
    digitalWrite(trigPin, LOW);
    delayMicroseconds(2);

    digitalWrite(trigPin, HIGH);
    delayMicroseconds(10);
    digitalWrite(trigPin, LOW);

    // Měření času trvání odrazu
    duration = pulseIn(echoPin, HIGH);

    // Převod na vzdálenost v cm
    distanceCm = duration * 0.0343 / 2;

    // Výpis motorového stavu
    Serial.println("STATUS L:" + String((digitalRead(7) || digitalRead(2)) ? "ON" : "OFF") +
                   " SPEED:" + String(leftPWM) +
                   " DIR:" + String(leftReversed ? "REV" : "FWD"));

    Serial.println("STATUS R:" + String((digitalRead(3) || digitalRead(4)) ? "ON" : "OFF") +
                   " SPEED:" + String(rightPWM) +
                   " DIR:" + String(rightReversed ? "REV" : "FWD"));

    // Výpis baterie
    int rawValue = analogRead(analogPin);
    float analogVoltage = rawValue * referenceVoltage / 1023.0;
    float batteryVoltage = analogVoltage * voltageDividerRatio;
    float percent = (batteryVoltage - minBatteryVoltage) / (maxBatteryVoltage - minBatteryVoltage) * 100.0;
    percent = constrain(percent, 0, 100);

    Serial.print("BATTERY VOLTAGE:");
    Serial.print(batteryVoltage, 2);  // ✅ dvě desetinná místa
    Serial.print("V PERCENT:");
    Serial.print((int)percent);
    Serial.println("%");

    // Výpis vzdálenosti ze senzoru
    Serial.print("DISTANCE: ");
    Serial.print(distanceCm);
    Serial.println(" cm");
  }
}
